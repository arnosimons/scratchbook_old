{"hold": "Scratch([[[1, 1, 0], _L, 'k', _]])", "h": "Scratch([[[1, 1, 0], _L, 'k', _]])", "ghost": "Scratch([[[1, 1, 0], _N, 'w', _]])", "g": "Scratch([[[1, 1, 0], _N, 'w', _]])", "baby": "Scratch([[[1, 1, 0], _N, 'k', _]])", "b": "Scratch([[[1, 1, 0], _N, 'k', _]])", "in": "Scratch([[[1, 1, 0], _N, 'k', _0]])", "i": "Scratch([[[1, 1, 0], _N, 'k', _0]])", "out": "Scratch([[[1, 1, 0], _N, 'k', _1]])", "o": "Scratch([[[1, 1, 0], _N, 'k', _1]])", "dice": "Scratch([[[1, 1, 0], _N, 'k', np.hstack((_0, _1))]])", "d": "Scratch([[[1, 1, 0], _N, 'k', np.hstack((_0, _1))]])", "tr1": "Scratch([[[1, 1, 0], _N, 'k', np.hstack((_0, _1))]])", "transformer2": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _2, _1))]])", "tr2": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _2, _1))]])", "transformer2D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _2D, _1))]])", "tr2D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _2D, _1))]])", "transformer2A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _2A, _1))]])", "tr2A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _2A, _1))]])", "transformer2S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _2S, _1))]])", "tr2S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _2S, _1))]])", "transformer2Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _2Q, _1))]])", "tr2Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _2Q, _1))]])", "transformer3": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _3, _1))]])", "tr3": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _3, _1))]])", "transformer3D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _3D, _1))]])", "tr3D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _3D, _1))]])", "transformer3A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _3A, _1))]])", "tr3A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _3A, _1))]])", "transformer3S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _3S, _1))]])", "tr3S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _3S, _1))]])", "transformer3Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _3Q, _1))]])", "tr3Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _3Q, _1))]])", "transformer4": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _4, _1))]])", "tr4": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _4, _1))]])", "transformer4D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _4D, _1))]])", "tr4D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _4D, _1))]])", "transformer4A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _4A, _1))]])", "tr4A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _4A, _1))]])", "transformer4S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _4S, _1))]])", "tr4S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _4S, _1))]])", "transformer4Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _4Q, _1))]])", "tr4Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_0, _4Q, _1))]])", "flare1": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_2))]])", "f1": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_2))]])", "flare1D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_2D))]])", "f1D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_2D))]])", "flare1A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_2A))]])", "f1A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_2A))]])", "flare1S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_2S))]])", "f1S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_2S))]])", "flare1Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_2Q))]])", "f1Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_2Q))]])", "flare2": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_3))]])", "f2": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_3))]])", "flare2D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_3D))]])", "f2D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_3D))]])", "flare2A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_3A))]])", "f2A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_3A))]])", "flare2S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_3S))]])", "f2S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_3S))]])", "flare2Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_3Q))]])", "f2Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_3Q))]])", "flare3": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_4))]])", "f3": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_4))]])", "flare3D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_4D))]])", "f3D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_4D))]])", "flare3A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_4A))]])", "f3A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_4A))]])", "flare3S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_4S))]])", "f3S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_4S))]])", "flare3Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_4Q))]])", "f3Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_4Q))]])", "flare4": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_5))]])", "f4": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_5))]])", "flare4D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_5D))]])", "f4D": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_5D))]])", "flare4A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_5A))]])", "f4A": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_5A))]])", "flare4S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_5S))]])", "f4S": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_5S))]])", "flare4Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_5Q))]])", "f4Q": "Scratch([[[1, 1, 0], _N, 'k',  np.hstack((_5Q))]])", "ghostEx": "Scratch([[[1, 1, 0], _Ex, 'w', _]])", "gEx": "Scratch([[[1, 1, 0], _Ex, 'w', _]])", "ghostLog": "Scratch([[[1, 1, 0], _Log, 'w', _]])", "gLog": "Scratch([[[1, 1, 0], _Log, 'w', _]])", "babyEx": "Scratch([[[1, 1, 0], _Ex, 'k', _]])", "bEx": "Scratch([[[1, 1, 0], _Ex, 'k', _]])", "babyLog": "Scratch([[[1, 1, 0], _Log, 'k', _]])", "bLog": "Scratch([[[1, 1, 0], _Log, 'k', _]])", "inEx": "Scratch([[[1, 1, 0], _Ex, 'k', _0]])", "iEx": "Scratch([[[1, 1, 0], _Ex, 'k', _0]])", "inLog": "Scratch([[[1, 1, 0], _Log, 'k', _0]])", "iLog": "Scratch([[[1, 1, 0], _Log, 'k', _0]])", "outEx": "Scratch([[[1, 1, 0], _Ex, 'k', _1]])", "oEx": "Scratch([[[1, 1, 0], _Ex, 'k', _1]])", "outLog": "Scratch([[[1, 1, 0], _Log, 'k', _1]])", "oLog": "Scratch([[[1, 1, 0], _Log, 'k', _1]])", "diceEx": "Scratch([[[1, 1, 0], _Ex, 'k', np.hstack((_0, _1))]])", "dEx": "Scratch([[[1, 1, 0], _Ex, 'k', np.hstack((_0, _1))]])", "tr1Ex": "Scratch([[[1, 1, 0], _Ex, 'k', np.hstack((_0, _1))]])", "diceLog": "Scratch([[[1, 1, 0], _Log, 'k', np.hstack((_0, _1))]])", "dLog": "Scratch([[[1, 1, 0], _Log, 'k', np.hstack((_0, _1))]])", "tr1Log": "Scratch([[[1, 1, 0], _Log, 'k', np.hstack((_0, _1))]])", "transformer2Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _2, _1))]])", "tr2Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _2, _1))]])", "transformer2Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _2, _1))]])", "tr2Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _2, _1))]])", "transformer2DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _2D, _1))]])", "tr2DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _2D, _1))]])", "transformer2DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _2D, _1))]])", "tr2DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _2D, _1))]])", "transformer2AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _2A, _1))]])", "tr2AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _2A, _1))]])", "transformer2ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _2A, _1))]])", "tr2ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _2A, _1))]])", "transformer2SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _2S, _1))]])", "tr2SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _2S, _1))]])", "transformer2SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _2S, _1))]])", "tr2SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _2S, _1))]])", "transformer2QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _2Q, _1))]])", "tr2QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _2Q, _1))]])", "transformer2QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _2Q, _1))]])", "tr2QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _2Q, _1))]])", "transformer3Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _3, _1))]])", "tr3Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _3, _1))]])", "transformer3Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _3, _1))]])", "tr3Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _3, _1))]])", "transformer3DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _3D, _1))]])", "tr3DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _3D, _1))]])", "transformer3DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _3D, _1))]])", "tr3DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _3D, _1))]])", "transformer3AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _3A, _1))]])", "tr3AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _3A, _1))]])", "transformer3ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _3A, _1))]])", "tr3ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _3A, _1))]])", "transformer3SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _3S, _1))]])", "tr3SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _3S, _1))]])", "transformer3SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _3S, _1))]])", "tr3SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _3S, _1))]])", "transformer3QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _3Q, _1))]])", "tr3QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _3Q, _1))]])", "transformer3QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _3Q, _1))]])", "tr3QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _3Q, _1))]])", "transformer4Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _4, _1))]])", "tr4Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _4, _1))]])", "transformer4Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _4, _1))]])", "tr4Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _4, _1))]])", "transformer4DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _4D, _1))]])", "tr4DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _4D, _1))]])", "transformer4DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _4D, _1))]])", "tr4DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _4D, _1))]])", "transformer4AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _4A, _1))]])", "tr4AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _4A, _1))]])", "transformer4ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _4A, _1))]])", "tr4ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _4A, _1))]])", "transformer4SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _4S, _1))]])", "tr4SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _4S, _1))]])", "transformer4SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _4S, _1))]])", "tr4SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _4S, _1))]])", "transformer4QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _4Q, _1))]])", "tr4QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_0, _4Q, _1))]])", "transformer4QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _4Q, _1))]])", "tr4QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_0, _4Q, _1))]])", "flare1Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_2))]])", "f1Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_2))]])", "flare1Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_2))]])", "f1Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_2))]])", "flare1DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_2D))]])", "f1DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_2D))]])", "flare1DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_2D))]])", "f1DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_2D))]])", "flare1AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_2A))]])", "f1AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_2A))]])", "flare1ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_2A))]])", "f1ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_2A))]])", "flare1SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_2S))]])", "f1SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_2S))]])", "flare1SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_2S))]])", "f1SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_2S))]])", "flare1QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_2Q))]])", "f1QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_2Q))]])", "flare1QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_2Q))]])", "f1QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_2Q))]])", "flare2Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_3))]])", "f2Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_3))]])", "flare2Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_3))]])", "f2Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_3))]])", "flare2DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_3D))]])", "f2DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_3D))]])", "flare2DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_3D))]])", "f2DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_3D))]])", "flare2AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_3A))]])", "f2AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_3A))]])", "flare2ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_3A))]])", "f2ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_3A))]])", "flare2SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_3S))]])", "f2SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_3S))]])", "flare2SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_3S))]])", "f2SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_3S))]])", "flare2QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_3Q))]])", "f2QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_3Q))]])", "flare2QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_3Q))]])", "f2QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_3Q))]])", "flare3Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_4))]])", "f3Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_4))]])", "flare3Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_4))]])", "f3Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_4))]])", "flare3DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_4D))]])", "f3DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_4D))]])", "flare3DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_4D))]])", "f3DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_4D))]])", "flare3AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_4A))]])", "f3AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_4A))]])", "flare3ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_4A))]])", "f3ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_4A))]])", "flare3SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_4S))]])", "f3SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_4S))]])", "flare3SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_4S))]])", "f3SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_4S))]])", "flare3QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_4Q))]])", "f3QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_4Q))]])", "flare3QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_4Q))]])", "f3QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_4Q))]])", "flare4Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_5))]])", "f4Ex": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_5))]])", "flare4Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_5))]])", "f4Log": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_5))]])", "flare4DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_5D))]])", "f4DEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_5D))]])", "flare4DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_5D))]])", "f4DLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_5D))]])", "flare4AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_5A))]])", "f4AEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_5A))]])", "flare4ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_5A))]])", "f4ALog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_5A))]])", "flare4SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_5S))]])", "f4SEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_5S))]])", "flare4SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_5S))]])", "f4SLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_5S))]])", "flare4QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_5Q))]])", "f4QEx": "Scratch([[[1, 1, 0], _Ex, 'k',  np.hstack((_5Q))]])", "flare4QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_5Q))]])", "f4QLog": "Scratch([[[1, 1, 0], _Log, 'k',  np.hstack((_5Q))]])", "babyL14H14": "b/(1/4)//(1/4)", "bL14H14": "b/(1/4)//(1/4)", "babyL13H13": "b/(1/3)//(1/3)", "bL13H13": "b/(1/3)//(1/3)", "babyL12H12": "b/(1/2)//(1/2)", "bL12H12": "b/(1/2)//(1/2)", "babyL14H14Y14": "(b/(1/4)//(1/4))**(1/4)", "bL14H14Y14": "(b/(1/4)//(1/4))**(1/4)", "babyL14H14Y34": "(b/(1/4)//(1/4))**(3/4)", "bL14H14Y34": "(b/(1/4)//(1/4))**(3/4)", "babyL13H13Y13": "(b/(1/3)//(1/3))**(1/3)", "bL13H13Y13": "(b/(1/3)//(1/3))**(1/3)", "babyL13H13Y23": "(b/(1/3)//(1/3))**(2/3)", "bL13H13Y23": "(b/(1/3)//(1/3))**(2/3)", "babyL12H12Y12": "(b/(1/2)//(1/2))**(1/2)", "bL12H12Y12": "(b/(1/2)//(1/2))**(1/2)", "diceL14H14": "d/(1/4)//(1/4)", "dL14H14": "d/(1/4)//(1/4)", "tr1L14H14": "d/(1/4)//(1/4)", "diceL13H13": "d/(1/3)//(1/3)", "dL13H13": "d/(1/3)//(1/3)", "tr1L13H13": "d/(1/3)//(1/3)", "diceL12H12": "d/(1/2)//(1/2)", "dL12H12": "d/(1/2)//(1/2)", "tr1L12H12": "d/(1/2)//(1/2)", "diceL14H14Y14": "(d/(1/4)//(1/4))**(1/4)", "dL14H14Y14": "(d/(1/4)//(1/4))**(1/4)", "tr1L14H14Y14": "(d/(1/4)//(1/4))**(1/4)", "diceL14H14Y34": "(d/(1/4)//(1/4))**(3/4)", "dL14H14Y34": "(d/(1/4)//(1/4))**(3/4)", "tr1L14H14Y34": "(d/(1/4)//(1/4))**(3/4)", "diceL13H13Y13": "(d/(1/3)//(1/3))**(1/3)", "dL13H13Y13": "(d/(1/3)//(1/3))**(1/3)", "tr1L13H13Y13": "(d/(1/3)//(1/3))**(1/3)", "diceL13H13Y23": "(d/(1/3)//(1/3))**(2/3)", "dL13H13Y23": "(d/(1/3)//(1/3))**(2/3)", "tr1L13H13Y23": "(d/(1/3)//(1/3))**(2/3)", "diceL12H12Y12": "(d/(1/2)//(1/2))**(1/2)", "dL12H12Y12": "(d/(1/2)//(1/2))**(1/2)", "tr1L12H12Y12": "(d/(1/2)//(1/2))**(1/2)", "babyExL14H14": "bEx/(1/4)//(1/4)", "bExL14H14": "bEx/(1/4)//(1/4)", "babyExL13H13": "bEx/(1/3)//(1/3)", "bExL13H13": "bEx/(1/3)//(1/3)", "babyExL12H12": "bEx/(1/2)//(1/2)", "bExL12H12": "bEx/(1/2)//(1/2)", "babyExL14H14Y14": "(bEx/(1/4)//(1/4))**(1/4)", "bExL14H14Y14": "(bEx/(1/4)//(1/4))**(1/4)", "babyExL14H14Y34": "(bEx/(1/4)//(1/4))**(3/4)", "bExL14H14Y34": "(bEx/(1/4)//(1/4))**(3/4)", "babyExL13H13Y13": "(bEx/(1/3)//(1/3))**(1/3)", "bExL13H13Y13": "(bEx/(1/3)//(1/3))**(1/3)", "babyExL13H13Y23": "(bEx/(1/3)//(1/3))**(2/3)", "bExL13H13Y23": "(bEx/(1/3)//(1/3))**(2/3)", "babyExL12H12Y12": "(bEx/(1/2)//(1/2))**(1/2)", "bExL12H12Y12": "(bEx/(1/2)//(1/2))**(1/2)", "babyLogL14H14": "bLog/(1/4)//(1/4)", "bLogL14H14": "bLog/(1/4)//(1/4)", "babyLogL13H13": "bLog/(1/3)//(1/3)", "bLogL13H13": "bLog/(1/3)//(1/3)", "babyLogL12H12": "bLog/(1/2)//(1/2)", "bLogL12H12": "bLog/(1/2)//(1/2)", "babyLogL14H14Y14": "(bLog/(1/4)//(1/4))**(1/4)", "bLogL14H14Y14": "(bLog/(1/4)//(1/4))**(1/4)", "babyLogL14H14Y34": "(bLog/(1/4)//(1/4))**(3/4)", "bLogL14H14Y34": "(bLog/(1/4)//(1/4))**(3/4)", "babyLogL13H13Y13": "(bLog/(1/3)//(1/3))**(1/3)", "bLogL13H13Y13": "(bLog/(1/3)//(1/3))**(1/3)", "babyLogL13H13Y23": "(bLog/(1/3)//(1/3))**(2/3)", "bLogL13H13Y23": "(bLog/(1/3)//(1/3))**(2/3)", "babyLogL12H12Y12": "(bLog/(1/2)//(1/2))**(1/2)", "bLogL12H12Y12": "(bLog/(1/2)//(1/2))**(1/2)", "diceExL14H14": "dEx/(1/4)//(1/4)", "dExL14H14": "dEx/(1/4)//(1/4)", "tr1ExL14H14": "dEx/(1/4)//(1/4)", "diceExL13H13": "dEx/(1/3)//(1/3)", "dExL13H13": "dEx/(1/3)//(1/3)", "tr1ExL13H13": "dEx/(1/3)//(1/3)", "diceExL12H12": "dEx/(1/2)//(1/2)", "dExL12H12": "dEx/(1/2)//(1/2)", "tr1ExL12H12": "dEx/(1/2)//(1/2)", "diceExL14H14Y14": "(dEx/(1/4)//(1/4))**(1/4)", "dExL14H14Y14": "(dEx/(1/4)//(1/4))**(1/4)", "tr1ExL14H14Y14": "(dEx/(1/4)//(1/4))**(1/4)", "diceExL14H14Y34": "(dEx/(1/4)//(1/4))**(3/4)", "dExL14H14Y34": "(dEx/(1/4)//(1/4))**(3/4)", "tr1ExL14H14Y34": "(dEx/(1/4)//(1/4))**(3/4)", "diceExL13H13Y13": "(dEx/(1/3)//(1/3))**(1/3)", "dExL13H13Y13": "(dEx/(1/3)//(1/3))**(1/3)", "tr1ExL13H13Y13": "(dEx/(1/3)//(1/3))**(1/3)", "diceExL13H13Y23": "(dEx/(1/3)//(1/3))**(2/3)", "dExL13H13Y23": "(dEx/(1/3)//(1/3))**(2/3)", "tr1ExL13H13Y23": "(dEx/(1/3)//(1/3))**(2/3)", "diceExL12H12Y12": "(dEx/(1/2)//(1/2))**(1/2)", "dExL12H12Y12": "(dEx/(1/2)//(1/2))**(1/2)", "tr1ExL12H12Y12": "(dEx/(1/2)//(1/2))**(1/2)", "diceLogL14H14": "dLog/(1/4)//(1/4)", "dLogL14H14": "dLog/(1/4)//(1/4)", "tr1LogL14H14": "dLog/(1/4)//(1/4)", "diceLogL13H13": "dLog/(1/3)//(1/3)", "dLogL13H13": "dLog/(1/3)//(1/3)", "tr1LogL13H13": "dLog/(1/3)//(1/3)", "diceLogL12H12": "dLog/(1/2)//(1/2)", "dLogL12H12": "dLog/(1/2)//(1/2)", "tr1LogL12H12": "dLog/(1/2)//(1/2)", "diceLogL14H14Y14": "(dLog/(1/4)//(1/4))**(1/4)", "dLogL14H14Y14": "(dLog/(1/4)//(1/4))**(1/4)", "tr1LogL14H14Y14": "(dLog/(1/4)//(1/4))**(1/4)", "diceLogL14H14Y34": "(dLog/(1/4)//(1/4))**(3/4)", "dLogL14H14Y34": "(dLog/(1/4)//(1/4))**(3/4)", "tr1LogL14H14Y34": "(dLog/(1/4)//(1/4))**(3/4)", "diceLogL13H13Y13": "(dLog/(1/3)//(1/3))**(1/3)", "dLogL13H13Y13": "(dLog/(1/3)//(1/3))**(1/3)", "tr1LogL13H13Y13": "(dLog/(1/3)//(1/3))**(1/3)", "diceLogL13H13Y23": "(dLog/(1/3)//(1/3))**(2/3)", "dLogL13H13Y23": "(dLog/(1/3)//(1/3))**(2/3)", "tr1LogL13H13Y23": "(dLog/(1/3)//(1/3))**(2/3)", "diceLogL12H12Y12": "(dLog/(1/2)//(1/2))**(1/2)", "dLogL12H12Y12": "(dLog/(1/2)//(1/2))**(1/2)", "tr1LogL12H12Y12": "(dLog/(1/2)//(1/2))**(1/2)", "scribble": "bb * 2 / 1", "sc": "s / (2/3) + i / (1/3)", "drills": "bb * 4 / 1", "dr": "bb * 4 / 1", "swingflare": "(s + dd) / 1", "sf": "(s + dd) / 1", "chirpflare1": "(c / (1/3) + ocf / (2/3)) / 2", "cf1": "(c / (1/3) + ocf / (2/3)) / 2", "chirpflare2": "c / (1/2) + tcf / (3/2)", "cf2": "c / (1/2) + tcf / (3/2)", "prizm": "dt1/(2/3) + ~i/(1/3) + i/(1/3) + ~dt1/(2/3)", "pr": "dt1/(2/3) + ~i/(1/3) + i/(1/3) + ~dt1/(2/3)", "slicecut": "s / (2/3) + i / (1/3)", "boomerang": "sc + ~sc", "boom": "sc + ~sc", "autobahn": "s/(2/3)//(1/3) + i/(1/3)//(1/3) + (s/(2/3)//(1/3))**(1/3) + (dt1//(2/3)/(2/3))**(1/3) + ~dt1/(2/3)", "ab": "s/(2/3)//(1/3) + i/(1/3)//(1/3) + (s/(2/3)//(1/3))**(1/3) + (dt1//(2/3)/(2/3))**(1/3) + ~dt1/(2/3)", "seesaw": "(b + ~b + g + ~b + b + ~g) / 1", "ss": "(b + ~b + g + ~b + b + ~g) / 1", "tazer1": "~bLog_f1Log_R3", "ta1": "~bLog_f1Log_R3", "tazer2": "~bLog_f2Log_R4", "ta2": "~bLog_f2Log_R4", "stabcrab": "((bLog + ~gLog) / (1/4) + f2 / (3/8) + ~g / (1/8)) * 16", "stcr": "((bLog + ~gLog) / (1/4) + f2 / (3/8) + ~g / (1/8)) * 16", "slicecombo1": "(h/(1/8))**(1/3) + ~s/(1/4)//(1/3) + (i/(1/8)//(1/3))**(1/3) + (s/(1/4)//(1/3))**(2/3) + (~i/(1/8)//(1/6))**(3/6) + (~i/(1/8)//(1/6))**(2/6)", "slico1": "(h/(1/8))**(1/3) + ~s/(1/4)//(1/3) + (i/(1/8)//(1/3))**(1/3) + (s/(1/4)//(1/3))**(2/3) + (~i/(1/8)//(1/6))**(3/6) + (~i/(1/8)//(1/6))**(2/6)", "slicecombo2": "(h/(1/8))**(1/3) + ~s/(1/4)//(1/3) + (i/(1/8)//(1/3))**(1/3) + (s/(1/4)//(1/3))**(2/3) + ~(i/(1/8)//(1/3))**(1/3) + ~s/(1/4)//(1/3) + (i/(1/8)//(1/3))**(1/3) + (s/(1/4)//(1/3))**(2/3) + ~(i/(1/8)//(1/6))**(3/6) + ~(s/(1/4)//(1/3))**(1/6) +(~i/(1/8)//(1/6))**(2/6)", "slico2": "(h/(1/8))**(1/3) + ~s/(1/4)//(1/3) + (i/(1/8)//(1/3))**(1/3) + (s/(1/4)//(1/3))**(2/3) + ~(i/(1/8)//(1/3))**(1/3) + ~s/(1/4)//(1/3) + (i/(1/8)//(1/3))**(1/3) + (s/(1/4)//(1/3))**(2/3) + ~(i/(1/8)//(1/6))**(3/6) + ~(s/(1/4)//(1/3))**(1/6) +(~i/(1/8)//(1/6))**(2/6)", "babyorbit": "b / (1/2) + ~b / (1/2)", "bb": "b / (1/2) + ~b / (1/2)", "b_b": "b / (1/2) + ~b / (1/2)", "slice": "i / (1/2) + ~o / (1/2)", "s": "i / (1/2) + ~o / (1/2)", "i_o": "i / (1/2) + ~o / (1/2)", "chirp": "o / (1/2) + ~i / (1/2)", "c": "o / (1/2) + ~i / (1/2)", "o_i": "o / (1/2) + ~i / (1/2)", "stab": "d / (1/2) + ~g / (1/2)", "st": "d / (1/2) + ~g / (1/2)", "d_g": "d / (1/2) + ~g / (1/2)", "diceorbit": "d / (1/2) + ~d / (1/2)", "dd": "d / (1/2) + ~d / (1/2)", "fakechirp": "d / (1/2) + ~d / (1/2)", "fc": "d / (1/2) + ~d / (1/2)", "d_d": "d / (1/2) + ~d / (1/2)", "ocf": "f1 / (1/2) + ~f1 / (1/2)", "f1_f1": "f1 / (1/2) + ~f1 / (1/2)", "tcf": "f2 / (1/2) + ~f2 / (1/2)", "f2_f2": "f2 / (1/2) + ~f2 / (1/2)"}